name: Testing
on:
  push:
    branches:
      - master
      - release
  pull_request:
    branches:
      - master

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
        name: 'Setup python'
      - run: python -m pip install --upgrade pip setuptools wheel
        name: 'Install dependencies'
      - run: pip install codespell
        name: 'Install codespell'
      - run: make codespell
        name: 'Run codespell'
      - run: pip install pydocstyle
        name: 'Install pydocstyle'
      - run: make pydocstyle
        name: 'Run pydocstyle'

  coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      DISPLAY: ':99'
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;
        name: 'Setup xvfb'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
          architecture: 'x64'
        name: 'Setup python'
      - run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements_testing.txt
        name: 'Install dependencies'
      - run: pip install -e .
        name: 'Install blockbuilder'
      - run: make coverage-codacy
        name: 'Run tests'
      - uses: codacy/codacy-coverage-reporter-action@master
        if: success()
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: cobertura.xml
        name: 'Upload coverage to Codacy'
      - uses: codecov/codecov-action@v1
        if: success()
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
        name: 'Upload coverage to CodeCov'

  windows-py38-64bit:
    runs-on: windows-latest
    strategy:
      matrix:
        python:
          - name: '3.6'
          - name: '3.7'
          - name: '3.8'
        qt_api:
          - name: 'PyQt5'
        qt_version:
          - name: '5.14.0'
          - name: '5.15.0'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.name }}
          architecture: 'x64'
        name: 'Setup python'
      - run: .\install_opengl.ps1
        shell: pwsh
        name: 'Install opengl'
      - run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements_testing.txt
          pip install ${{ matrix.qt_api.name }}==${{ matrix.qt_version }}
        name: 'Install dependencies'
      - run: pip install -e .
        name: 'Install blockbuilder'
      - run: pytest -v blockbuilder -n 1
        name: 'Run tests'

  ubuntu-py37-64bit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - name: '3.6'
          - name: '3.7'
        qt_api:
          - name: 'PyQt5'
        qt_version:
          - name: '5.14.0'
          - name: '5.15.0'
    defaults:
      run:
        shell: bash
    env:
      DISPLAY: ':99'
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;
        name: 'Setup xvfb'
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.name }}
          architecture: 'x64'
        name: 'Setup python'
      - run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements_testing.txt
          pip install ${{ matrix.qt_api.name }}==${{ matrix.qt_version }}
        name: 'Install dependencies'
      - run: pip install -e .
        name: 'Install blockbuilder'
      - run: pytest -v blockbuilder -n 1
        name: 'Run tests'

  # Linux test with pytest-xvfb
  # ---
  # ubuntu-py37-64bit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: sudo apt install libxkbcommon-x11-0
  #       name: 'Install libxkbcommon-x11-0'
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.7'
  #         architecture: 'x64'
  #     - run: |
  #         python -m pip install --upgrade pip setuptools wheel
  #         pip install -r requirements_testing.txt
  #         pip install pytest-faulthandler pytest-xvfb
  #       name: 'Install dependencies'
  #     - run: pip install -e .
  #       name: 'Install blockbuilder'
  #     - run: pytest -v blockbuilder -n 1
  #       name: 'Run tests'
